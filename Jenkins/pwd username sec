pipeline {
    agent {
       node {
            label 'awsvm'
            }
    }

     options    {
                timestamps()
                buildDiscarder(logRotator(numToKeepStr: '2', artifactNumToKeepStr: '2'))
                timeout(time: 120, unit: 'MINUTES')
                disableConcurrentBuilds()
                }

    parameters {
            string(name: 'appBranch', defaultValue: 'main', description: "Application Branch name of the Repo")
            string(name: 'gitURL', defaultValue: 'https://github.com/Lavanyanelluri/mavenapp-jenkins.git', description: "Pass the Maven Repo Source Code GIT URL")
                }            


    stages {
        stage('checkout') {
            steps {
                git branch: appBranch, url: gitURL
            }
        }
        stage('Maven Build') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('docker build') {
            steps {
                sh 'docker build . -f dockerfile_testapp -t lavanyanelluri/awsmavendemo:latest'
            }
        }

          stage('docker login') {
            steps {
            withCredentials([usernamePassword(credentialsId: 'dockerlogin', passwordVariable: 'dockerpwd', usernameVariable: 'dockeruser')]) {

                sh 'docker login -u ${dockeruser} -p ${dockerpwd}'

                }
                 
            }
        }
        
        stage('docker push') {
            steps {
                sh 'docker push lavanyanelluri/awsmavendemo:latest'
            }
        }

    }
}


